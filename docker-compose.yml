version: "3"

services:
  event-bus:
    container_name: letsthink-event-bus
    image: "rabbitmq:management"
    ports:
      - 5672:5672
      - 15672:15672
    expose:
      - 5672
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 30s
      retries: 10

  frontend:
    container_name: letsthink-frontend
    build: "./frontend"
    ports:
      - 3000:3000
    volumes:
      - "./frontend/public:/usr/app/public"
      - "./frontend/src:/usr/app/src"
    depends_on:
      event-bus:
        condition: service_healthy

  rooms:
    container_name: letsthink-rooms
    build: "./rooms"
    ports:
      - 4001:4001
    volumes:
      - "./rooms/src:/usr/app/src"
    depends_on:
      event-bus:
        condition: service_healthy
      rooms-db:
        condition: service_healthy

  rooms-db:
    container_name: letsthink-rooms-db
    image: postgres:alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - "./rooms/src/init.sql:/docker-entrypoint-initdb.d/init.sql"
    healthcheck:
      test: pg_isready --username=postgres
      interval: 10s
      timeout: 30s
      retries: 10

  messages:
    container_name: letsthink-messages
    build: "./messages"
    ports:
      - 4002:4002
    volumes:
      - "./messages/src:/usr/app/src"
    depends_on:
      event-bus:
        condition: service_healthy

  messages-db:
    container_name: letsthink-messages-db
    image: postgres:alpine
    restart: always
    ports:
      - 5433:5432
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - "./messages/src/init.sql:/docker-entrypoint-initdb.d/create_tables.sql"

  polls:
    container_name: letsthink-polls
    build: "./polls"
    ports:
      - 4003:4003
    volumes:
      - "./polls/src:/usr/app/src"
    depends_on:
      event-bus:
        condition: service_healthy

  polls-db:
    container_name: letsthink-polls-db
    image: postgres:alpine
    restart: always
    ports:
      - 5434:5432
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - "./polls/src/init.sql:/docker-entrypoint-initdb.d/create_tables.sql"

  moderator:
    container_name: letsthink-moderator
    build: "./moderator"
    ports:
      - 4004:4004
    volumes:
      - "./moderator/src:/usr/app/src"
    depends_on:
      event-bus:
        condition: service_healthy

  email:
    container_name: letsthink-email
    build: "./email"
    ports:
      - 4005:4005
    volumes:
      - "./email/src:/usr/app/src"
    depends_on:
      event-bus:
        condition: service_healthy

  # users:
  #   container_name: letsthink-users
  #   build: "./users"
  #   ports:
  #     - 4006:4006
  #   volumes:
  #     - "./users/src:/usr/app/src"
  #   depends_on:
  #     event-bus:
  #       condition: service_healthy

  users-db:
    container_name: letsthink-users-db
    image: postgres:alpine
    restart: always
    ports:
      - 5437:5432
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - "./users/src/init.sql:/docker-entrypoint-initdb.d/create_tables.sql"

  authenticator:
    container_name: letsthink-authenticator
    build: "./authenticator"
    ports:
      - 4007:4007
    volumes:
      - "./authenticator/src:/usr/app/src"
    depends_on:
      event-bus:
        condition: service_healthy

  authenticator-cache:
    container_name: letsthink-authenticator-cache
    image: redis:alpine
    restart: always
    ports:
      - 6397:6397
    volumes:
      - ./authenticator/session-cache:/data

  expiration:
    container_name: letsthink-expiration
    build: "./expiration"
    ports:
      - 4008:4008
    volumes:
      - "./expiration/src:/usr/app/src"
    depends_on:
      event-bus:
        condition: service_healthy

  site-health:
    container_name: letsthink-site-health
    build: "./site-health"
    ports:
      - 4009:4009
    volumes:
      - "./site-health/src:/usr/app/src"
    depends_on:
      event-bus:
        condition: service_healthy

  site-health-db:
    container_name: letsthink-site-health-db
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27017:27017

  visualizer:
    container_name: letsthink-visualizer
    build: "./visualizer"
    ports:
      - 4010:4010
    volumes:
      - "./visualizer/src:/usr/app/src"
    depends_on:
      event-bus:
        condition: service_healthy

  query:
    container_name: letsthink-query
    build: "./query"
    ports:
      - 4011:4011
    volumes:
      - "./query/src:/usr/app/src"
    depends_on:
      event-bus:
        condition: service_healthy

  query-db:
    container_name: letsthink-query-db
    image: postgres:alpine
    restart: always
    ports:
      - 5444:5432
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - "./query/src/init.sql:/docker-entrypoint-initdb.d/create_tables.sql"

  vote:
    container_name: letsthink-vote
    build: "./vote"
    ports:
      - 4012:4012
    volumes:
      - "./vote/src:/usr/app/src"
    depends_on:
      event-bus:
        condition: service_healthy

  vote-db:
    container_name: letsthink-vote-db
    image: postgres:alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - "./vote/src/init.sql:/docker-entrypoint-initdb.d/init.sql"
    healthcheck:
      test: pg_isready --username=postgres
      interval: 10s
      timeout: 30s
      retries: 10
