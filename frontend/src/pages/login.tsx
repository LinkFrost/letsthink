import { FormEvent, useContext, useEffect, useState, useRef } from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import Suspend from "../components/utils/Suspend";
import { AuthService, RoomsService } from "../utils/services";
import { AuthContext } from "./_app";

export default function Login() {
  const auth = useContext(AuthContext);

  const email = useRef() as React.MutableRefObject<HTMLInputElement>;
  const password = useRef() as React.MutableRefObject<HTMLInputElement>;
  const router = useRouter();

  const [token, setToken] = useState<any>("");

  const handleSubmit = async (e: FormEvent<HTMLButtonElement>) => {
    e.preventDefault();

    const res = await fetch(`${AuthService}/login`, {
      method: "POST",
      credentials: "include",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        email: email.current.value,
        password: password.current.value,
      }),
    });

    const data = await res.json();

    if (data.success) {
      setToken(res.headers.get("authorization"));
    }
  };

  const handleRoomSubmit = async (e: FormEvent<HTMLButtonElement>) => {
    e.preventDefault();

    const res = await fetch(`${RoomsService}/rooms`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Access-Control-Allow-Credentials": "true",
        Authorization: token,
      },
      credentials: "include",
      body: JSON.stringify({
        user_id: "123456",
        title: "HIIIIIII",
        about: "This is my room",
        duration: 15,
        room_type: "poll",
        expired: false,
      }),
    });
    console.log(res);
  };

  return (
    <>
      <Head>
        <title>Lets Think</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="mt-5 flex flex-col items-center justify-center">
        <h1 className="mb-5 text-2xl font-semibold text-white">Login</h1>
        <form className="flex flex-col">
          <label htmlFor="email">
            <p className="text-lg text-white">Email:</p>
          </label>
          <input id="email" className="text-black" ref={email} type="text"></input>
          <label htmlFor="password">
            <p className="text-lg text-white">Password:</p>
          </label>{" "}
          <input id="password" className="text-black" type="text" ref={password}></input>
          <button onClick={(e) => handleSubmit(e)} className="mt-5 rounded-xl bg-white p-2 hover:bg-gray-300">
            Login
          </button>
        </form>
        <button onClick={(e) => handleRoomSubmit(e)} className="mt-5 rounded-xl bg-white p-2 hover:bg-gray-300">
          Create Room
        </button>
      </div>
    </>
  );
}
