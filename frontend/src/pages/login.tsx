import { FormEvent, useRef, useState } from "react";
import Head from "next/head";
import Link from "next/link";
import { AuthService } from "../utils/services";
import Spinner from "../components/other/Spinner";

type SubmissionStatus = {
  color: "red" | "emerald" | "";
  message: string;
  status: "error" | "success" | "";
};

export default function Login() {
  const email = useRef() as React.MutableRefObject<HTMLInputElement>;
  const password = useRef() as React.MutableRefObject<HTMLInputElement>;
  const [submissionStatus, setSubmissionStatus] = useState<SubmissionStatus>({ color: "", message: "", status: "" });
  const [signUpLoading, setSignUpLoading] = useState(false);

  const handleSubmit = async (e: FormEvent<HTMLButtonElement>) => {
    e.preventDefault();

    setSignUpLoading(true);
    const res = await fetch(`${AuthService}/auth/login`, {
      method: "POST",
      credentials: "include",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        email: email.current.value,
        password: password.current.value,
      }),
    });
    setSignUpLoading(false);

    const data = await res.json();

    if (data.loginError) {
      setSubmissionStatus({ status: "error", color: "red", message: "Email/password combination does not exist!" });
    }

    if (data.error) {
      setSubmissionStatus({ status: "error", color: "red", message: "Error logging in, please try again later." });
    }

    if (data.success) {
      window.location.href = "/";
    }
  };

  return (
    <>
      <Head>
        <title>letsthink</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="mt-5 flex flex-col items-center justify-center">
        <h1 className="mb-5 text-2xl font-semibold text-white">Login</h1>
        <form className="flex flex-col items-start gap-1">
          <label htmlFor="email">
            <p className="text-lg text-white">Email:</p>
          </label>
          <input id="email" className="rounded-md px-2 py-[0.125rem] text-black" ref={email} type="text"></input>
          <label htmlFor="password">
            <p className="text-lg text-white">Password:</p>
          </label>{" "}
          <input id="password" className="rounded-md px-2 py-[0.125rem] text-black" type="password" ref={password}></input>
          <p className={"text-center text-xs text-red-500"}>{submissionStatus.message}</p>
          <button disabled={signUpLoading} onClick={(e) => handleSubmit(e)} className="mt-5 mb-5 ml-auto rounded-xl bg-white p-2 px-4 hover:bg-gray-300">
            {signUpLoading ? <Spinner shade={900} size={6} /> : "Login"}
          </button>
          <p className="text-sm text-gray-300">
            {"Don't have an account? "}
            <Link href="/signup" className="font-semibold hover:underline">
              Sign Up Here
            </Link>
          </p>
        </form>
      </div>
    </>
  );
}
